{
  parserClass="org.intellij.batch.parser.BatchParser"

  // extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Batch"
  psiImplClassSuffix="Impl"
  psiPackage="org.intellij.batch.psi"
  psiImplPackage="org.intellij.batch.psi.impl"

  elementTypeHolderClass="org.intellij.batch.psi.BatchTypes"
  elementTypeClass="org.intellij.batch.psi.BatchElementType"
  tokenTypeClass="org.intellij.batch.psi.BatchTokenType"

  // psiImplUtilClass="org.intellij.batch.psi.impl.BatchPsiImplUtil"
}

batchFile ::= command*

command ::= joinedCommand | disjointCommand | conjointCommand | pipedCommand | simpleCommand

joinedCommand ::= command COMMAND_JOIN_OPERATOR command { extends = command }

disjointCommand ::= command COMMAND_DISJUNCTION_OPERATOR command { extends = command }

conjointCommand ::= command COMMAND_CONJUNCTION_OPERATOR command { extends = command }

pipedCommand ::= command PIPE_OPERATOR command { extends = command }

simpleCommand ::= redirection* COMMAND_NAME (CHAR_SEQUENCE | redirection)* { extends = command }

redirection ::= REDIRECT_TO_HANDLE_OPERATOR | (REDIRECT_TO_FILE_OPERATOR CHAR_SEQUENCE)

tokens ::=
EOL_OPERATOR
LEFT_PARENTHESES
RIGHT_PARENTHESES
IF_KEYWORD
EXIST_KEYWORD
ELSE_KEYWORD
