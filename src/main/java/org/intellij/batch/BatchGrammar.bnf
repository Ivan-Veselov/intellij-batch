{
  parserClass="org.intellij.batch.parser.BatchParser"

  // extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Batch"
  psiImplClassSuffix="Impl"
  psiPackage="org.intellij.batch.psi"
  psiImplPackage="org.intellij.batch.psi.impl"

  elementTypeHolderClass="org.intellij.batch.psi.BatchTypes"
  elementTypeClass="org.intellij.batch.psi.BatchElementType"
  tokenTypeClass="org.intellij.batch.psi.BatchTokenType"

  // psiImplUtilClass="org.intellij.batch.psi.impl.BatchPsiImplUtil"
}

batchFile ::= command*

command ::= pipedCommand | booleanCommand | simpleCommand

pipedCommand ::= command PIPE_OPERATOR command { extends = command }

booleanCommand ::= command (COMMAND_JOIN_OPERATOR | COMMAND_AND_OPERATOR| COMMAND_OR_OPERATOR) command { extends = command }

simpleCommand ::= COMMAND_NAME CHAR_SEQUENCE* { extends = command }

tokens ::=
EOL_OPERATOR
REDIRECT_OPERATOR
LEFT_PARENTHESES
RIGHT_PARENTHESES
IF_KEYWORD
EXIST_KEYWORD
ELSE_KEYWORD
